"use strict";var dataRules=[{textRules:"<p>Крестки-нолики</p>\n                <p>Игроки по очереди ставят на свободные клетки поля символы (один всегда крестики, другой всегда нолики). Первый, выстроивший в ряд 3 символа по вертикали, горизонтали или диагонали, выигрывает. Первый ход делает игрок, ставящий крестики.</p>"},{textRules:"<p>Змейка</p>\n                <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Maxime necessitatibus voluptate molestias eaque iste\n                eum corrupti tenetur, illo nihil illum natus dolore perspiciatis ducimus eius exercitationem laboriosam tempore\n                reiciendis quaerat.</p>"}],popup=document.querySelector(".js-popup"),popupBody=document.querySelector(".js-popup__body"),popupClose=document.querySelector(".js-popup__close-btn"),popupText=document.querySelector(".js-popup__text"),popupOpenBtns=document.querySelectorAll(".js-btn-ruls");function mapRuls(e){return{ticTacToe:0,snake:1}[e]}null!==popup&&(popupClose.addEventListener("click",(function(e){popup.classList.remove("active")})),popupBody.addEventListener("click",(function(e){e.target.closest(".js-popup__content")||popup.classList.remove("active")})),popupOpenBtns.forEach((function(e){e.addEventListener("click",(function(e){popup.classList.add("active");var t=mapRuls(e.currentTarget.getAttribute("data-ruls")),r=dataRules[t].textRules;popupText.innerHTML="".concat(r)}))})));var widthCanvas,heightCanvas,widthGameCells,heightGameCells,main=document.querySelector(".js-snake"),keyDirection=null,cell=25,indentCell=2,startTime=0,currentTime=0,time=0,currentSecond=0,snake={x:0,y:cell,dx:cell,dy:0,tails:[{x:0,y:cell}],maxTails:3};if(null!==main){var gameLoop=function e(){requestAnimationFrame(e),0===startTime&&(startTime=(new Date).getTime()),currentTime=(new Date).getTime(),time=currentTime-startTime,(currentSecond=Math.floor(time/500))>0&&(startTime=0,ctx.clearRect(0,0,widthGameCells,heightGameCells),renderGameBoard(columGame,rowGame,cell,indentCell,ctx),drawSnake(ctx))},canvas=document.querySelector(".js-snake__game"),ctx=canvas.getContext("2d");widthCanvas=main.clientWidth/2,heightCanvas=main.clientHeight-200,widthGameCells=roundCell(widthCanvas,cell),heightGameCells=roundCell(heightCanvas,cell),canvas.setAttribute("width",widthGameCells),canvas.setAttribute("height",heightGameCells);var rowGame=widthGameCells/cell,columGame=heightGameCells/cell;requestAnimationFrame(gameLoop)}function renderGameBoard(e,t,r,n,a){for(var i=0;i<e;i++)for(var l=0;l<t;l++)a.fillStyle="rgba(255, 255, 255, 0.4)",a.fillRect(l*r,i*r,r-n,r-n)}function drawSnake(e){snake.x=snake.x+snake.dx,snake.y=snake.y+snake.dy,collisionBorder(widthGameCells,heightGameCells,cell),snake.tails.unshift({x:snake.x,y:snake.y}),snake.tails.length>snake.maxTails&&snake.tails.pop(),snake.tails.forEach((function(t,r){e.fillStyle=0==r?"#333333":"#555555",e.fillRect(t.x,t.y,cell-indentCell,cell-indentCell)}))}function collisionBorder(e,t,r){snake.x<0&&(snake.x=e-r),snake.x>=e&&(snake.x=0),snake.y<0&&(snake.y=t-r),snake.y>=t&&(snake.y=0)}function roundCell(e,t){return Math.round(e/t)*t}function _createForOfIteratorHelper(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,o=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return l=e.done,e},e:function(e){o=!0,i=e},f:function(){try{l||null==r.return||r.return()}finally{if(o)throw i}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}document.addEventListener("keydown",(function(e){"ArrowUp"===e.code&&(null!==keyDirection&&"down"===keyDirection||(snake.dx=0,snake.dy=-cell,keyDirection="up")),"ArrowDown"===e.code&&(null!==keyDirection&&"up"===keyDirection||(snake.dx=0,snake.dy=cell,keyDirection="down")),"ArrowLeft"===e.code&&(null!==keyDirection&&"right"===keyDirection||(snake.dx=-cell,snake.dy=0,keyDirection="left")),"ArrowRight"===e.code&&(null!==keyDirection&&"left"===keyDirection||(snake.dx=cell,snake.dy=0,keyDirection="right"))}));var cells,origBoard,restartBtn=document.querySelector(".js-tic-tac-toe__restart"),newGameBtn=document.querySelector(".js-tic-tac-toe__new-game"),easyLevelBtn=document.querySelector(".js-tic-tac-toe__easy-level"),hardLevelBtn=document.querySelector(".js-tic-tac-toe__hard-level"),gameBoard=document.querySelector(".js-tic-tac-toe__game"),winText=document.querySelector(".js-tic-tac-toe__win-text"),keyLevel="easy",huPlayer="X",aiPlayer="O",huSymbol='<svg class="cross">\n<line class="cross-first" x1="10" y1="10" x2="70" y2="70" stroke="#333" stroke-width="10" stroke-linecap="round" />\n<line class="cross-second" x1="70" y1="10" x2="10" y2="70" stroke="#333" stroke-width="10" stroke-linecap="round" />\n</svg>',aiSymbol='<svg class="circle">\n<circle r="30" cx="40" cy="40" stroke="#c15746" stroke-width="10" fill="none" stroke-linecap="round" />\n</svg>',winCombos=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[6,4,2]];function checkLevel(e){keyLevel=e,startGame(),restartBtn.removeAttribute("disabled"),newGameBtn.removeAttribute("disabled"),easyLevelBtn.setAttribute("disabled","disabled"),hardLevelBtn.setAttribute("disabled","disabled")}function initGame(){for(var e=0;e<9;e++){var t=document.createElement("div");t.setAttribute("id",e),t.classList.add("tic-tac-toe__cell"),gameBoard.appendChild(t)}cells=document.querySelectorAll(".tic-tac-toe__cell")}function startGame(){origBoard=[0,1,2,3,4,5,6,7,8];for(var e=0;e<cells.length;e++)cells[e].innerHTML="",cells[e].classList.add("mouse"),cells[e].addEventListener("click",turnClick);winText.innerText=""}function turnClick(e){"number"==typeof origBoard[e.target.id]&&(turn(e.target.id,huPlayer,huSymbol),checkTie()||checkWin(origBoard,huPlayer)||turn(bestSport(),aiPlayer,aiSymbol))}function turn(e,t,r){origBoard[e]=t,document.getElementById(e).innerHTML=r,cells[e].classList.remove("mouse"),checkWin(origBoard,t)&&gameOver(t)}function checkWin(e,t){var r,n=playerMoves(e,t),a=_createForOfIteratorHelper(winCombos);try{for(a.s();!(r=a.n()).done;){if(r.value.every((function(e){return-1!==n.indexOf(e)})))return!0}}catch(e){a.e(e)}finally{a.f()}return!1}function checkTie(){if(0==emptySquares().length){for(var e=0;e<cells.length;e++)cells[e].removeEventListener("click",turnClick);return setTimeout((function(){return declareWinner("Ничья")}),1500),!0}return!1}function gameOver(e){for(var t=0;t<cells.length;t++)cells[t].removeEventListener("click",turnClick),cells[t].classList.remove("mouse");setTimeout((function(){return declareWinner(e===huPlayer?"Вы победили":"Вы проиграли")}),1500)}function declareWinner(e){winText.innerText=e}function emptySquares(){return origBoard.filter((function(e){return"number"==typeof e}))}function playerMoves(e,t){for(var r=[],n=0;n<e.length;n++){e[n]===t&&(r=r.concat(n))}return r}function bestSport(){return"easy"===keyLevel?bestSportEasy():bestSportHard()}function bestSportEasy(){var e,t=emptySquares(),r=playerMoves(origBoard,huPlayer),n=_createForOfIteratorHelper(winCombos);try{for(n.s();!(e=n.n()).done;){var a=e.value;if(r.includes(a[0])&&r.includes(a[1])){if(t.includes(a[2]))return a[2]}else if(r.includes(a[0])&&r.includes(a[2])){if(t.includes(a[3]))return a[1]}else if(r.includes(a[1])&&r.includes(a[2])&&t.includes(a[0]))return a[0]}}catch(e){n.e(e)}finally{n.f()}return t[Math.floor(Math.random()*t.length)]}function bestSportHard(){return minimax(origBoard,aiPlayer).index}function minimax(e,t){var r=emptySquares();if(checkWin(e,huPlayer))return{score:-10};if(checkWin(e,aiPlayer))return{score:10};if(0===r.length)return{score:0};for(var n,a=[],i=0;i<r.length;i++){var l=[];if(l.index=e[r[i]],e[r[i]]=t,t==aiPlayer){var o=minimax(e,huPlayer);l.score=o.score}else{var c=minimax(e,aiPlayer);l.score=c.score}e[r[i]]=l.index,a.push(l)}if(t===aiPlayer)for(var s=-1/0,u=0;u<a.length;u++)a[u].score>s&&(s=a[u].score,n=u);else for(var d=1/0,m=0;m<a.length;m++)a[m].score<d&&(d=a[m].score,n=m);return a[n]}null!==gameBoard&&(initGame(),newGameBtn.addEventListener("click",(function(){easyLevelBtn.removeAttribute("disabled"),hardLevelBtn.removeAttribute("disabled"),newGameBtn.setAttribute("disabled","disabled"),restartBtn.setAttribute("disabled","disabled")})),easyLevelBtn.addEventListener("click",(function(){checkLevel("easy")})),hardLevelBtn.addEventListener("click",(function(){checkLevel("hard")})),restartBtn.addEventListener("click",(function(){startGame()})));
//# sourceMappingURL=main.js.map
