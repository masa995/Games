{"version":3,"sources":["dataPopup.js","popup.js","snake.js","ticTacToe.js"],"names":["dataRules","textRules","popup","document","querySelector","popupBody","popupClose","popupText","popupOpenBtns","querySelectorAll","mapRuls","name","ticTacToe","snake","addEventListener","e","classList","remove","target","closest","forEach","el","add","rulesNum","currentTarget","getAttribute","innerHTML","concat","widthCanvas","heightCanvas","widthGameCells","heightGameCells","main","keyDirection","cell","indentCell","startTime","currentTime","time","currentSecond","x","y","dx","dy","tails","maxTails","gameLoop","requestAnimationFrame","Date","getTime","Math","floor","ctx","clearRect","renderGameBoard","columGame","rowGame","drawSnake","canvas","getContext","clientWidth","clientHeight","roundCell","setAttribute","colum","row","indent","context","fillStyle","fillRect","collisionBorder","unshift","length","pop","index","width","height","num","round","code","cells","origBoard","restartBtn","newGameBtn","easyLevelBtn","hardLevelBtn","gameBoard","winText","keyLevel","huPlayer","aiPlayer","huSymbol","aiSymbol","winCombos","checkLevel","level","startGame","removeAttribute","initGame","i","createElement","appendChild","turnClick","innerText","event","id","turn","checkTie","checkWin","bestSport","squareId","player","playerSymbol","getElementById","gameOver","board","_step","moves","playerMoves","_iterator","_createForOfIteratorHelper","s","n","done","value","every","elem","indexOf","err","f","emptySquares","removeEventListener","setTimeout","declareWinner","who","filter","results","bestSportEasy","bestSportHard","_step2","arr","_iterator2","win","includes","random","minimax","newBoard","availSpots","score","bestMove","move","result","push","bestScore","Infinity"],"mappings":"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","file":"main.js","sourcesContent":["const dataRules = [\r\n  {\r\n    textRules: `<p>Крестки-нолики</p>\r\n                <p>Игроки по очереди ставят на свободные клетки поля символы (один всегда крестики, другой всегда нолики). Первый, выстроивший в ряд 3 символа по вертикали, горизонтали или диагонали, выигрывает. Первый ход делает игрок, ставящий крестики.</p>`\r\n  },\r\n\r\n  {\r\n    textRules: `<p>Змейка</p>\r\n                <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Maxime necessitatibus voluptate molestias eaque iste\r\n                eum corrupti tenetur, illo nihil illum natus dolore perspiciatis ducimus eius exercitationem laboriosam tempore\r\n                reiciendis quaerat.</p>`\r\n  }\r\n]","const popup = document.querySelector('.js-popup');\r\nconst popupBody = document.querySelector('.js-popup__body');\r\nconst popupClose = document.querySelector('.js-popup__close-btn');\r\nconst popupText = document.querySelector('.js-popup__text');\r\nconst popupOpenBtns = document.querySelectorAll('.js-btn-ruls');\r\n\r\nif (popup !== null) {\r\n  popupClose.addEventListener('click', (e) => {\r\n    popup.classList.remove('active');\r\n  });\r\n\r\n  popupBody.addEventListener('click', (e) => {\r\n    if (!e.target.closest('.js-popup__content')) {\r\n      popup.classList.remove('active');\r\n    }\r\n  })\r\n\r\n  popupOpenBtns.forEach((el) => {\r\n    el.addEventListener('click', (e) => {\r\n      popup.classList.add('active');\r\n      const rulesNum = mapRuls(e.currentTarget.getAttribute('data-ruls'));\r\n      const { textRules } = dataRules[rulesNum];\r\n      popupText.innerHTML = `${textRules}`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction mapRuls(name) {\r\n  const gamesRules = {\r\n    ticTacToe: 0,\r\n    snake: 1\r\n  }\r\n  return gamesRules[name];\r\n}","const main = document.querySelector('.js-snake');\r\nlet widthCanvas;\r\nlet heightCanvas;\r\nlet widthGameCells;\r\nlet heightGameCells;\r\nlet keyDirection = null;\r\nconst cell = 25;\r\nconst indentCell = 2;\r\n\r\nlet startTime = 0;\r\nlet currentTime = 0;\r\nlet time = 0;\r\nlet currentSecond = 0;\r\n\r\nconst snake = {\r\n  x: 0,\r\n  y: cell,\r\n  dx: cell,\r\n  dy: 0,\r\n  tails: [{ x: 0, y: cell }],\r\n  maxTails: 3\r\n}\r\n\r\nif (main !== null) {\r\n  const canvas = document.querySelector('.js-snake__game');\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  widthCanvas = main.clientWidth / 2;\r\n  heightCanvas = main.clientHeight - 200;\r\n\r\n  widthGameCells = roundCell(widthCanvas, cell);\r\n  heightGameCells = roundCell(heightCanvas, cell);\r\n\r\n  canvas.setAttribute('width', widthGameCells);\r\n  canvas.setAttribute('height', heightGameCells);\r\n\r\n  const rowGame = widthGameCells / cell;\r\n  const columGame = heightGameCells / cell;\r\n\r\n  // console.log(widthGameCells + \" - \" + heightGameCells);\r\n  // console.log(rowGame + \" - \" + columGame);\r\n\r\n  //Animation\r\n  requestAnimationFrame(gameLoop);\r\n\r\n  function gameLoop() {\r\n    requestAnimationFrame(gameLoop);\r\n\r\n    if (startTime === 0) {\r\n      startTime = new Date().getTime();\r\n    }\r\n\r\n    currentTime = new Date().getTime();\r\n    time = currentTime - startTime;\r\n    currentSecond = Math.floor(time / 500);\r\n\r\n    if (currentSecond > 0) {\r\n      startTime = 0;\r\n      ctx.clearRect(0, 0, widthGameCells, heightGameCells);\r\n\r\n      renderGameBoard(columGame, rowGame, cell, indentCell, ctx);\r\n      drawSnake(ctx);\r\n    }\r\n  }\r\n}\r\n\r\nfunction renderGameBoard(colum, row, cell, indent, context) {\r\n  for (let y = 0; y < colum; y++) {\r\n    for (let x = 0; x < row; x++) {\r\n      context.fillStyle = 'rgba(255, 255, 255, 0.4)';\r\n      context.fillRect(x * cell, y * cell, cell - indent, cell - indent);\r\n    }\r\n  }\r\n}\r\n\r\nfunction drawSnake(context) {\r\n  snake.x = snake.x + snake.dx;\r\n  snake.y = snake.y + snake.dy;\r\n  // console.log(snake.y + \" \" + \"y\" + \" - \" + snake.x + \" \" + \"x\");\r\n\r\n  collisionBorder(widthGameCells, heightGameCells, cell);\r\n\r\n  snake.tails.unshift({ x: snake.x, y: snake.y });\r\n\r\n  if (snake.tails.length > snake.maxTails) {\r\n    snake.tails.pop();\r\n  }\r\n\r\n  snake.tails.forEach((el, index) => {\r\n    if (index == 0) {\r\n      context.fillStyle = '#333333';\r\n    } else {\r\n      context.fillStyle = '#555555';\r\n    }\r\n    context.fillRect(el.x, el.y, cell - indentCell, cell - indentCell);\r\n  })\r\n}\r\n\r\nfunction collisionBorder(width, height, cell) {\r\n  if (snake.x < 0) {\r\n    snake.x = width - cell;\r\n  }\r\n  if (snake.x >= width) {\r\n    snake.x = 0;\r\n  }\r\n\r\n  if (snake.y < 0) {\r\n    snake.y = height - cell;\r\n  }\r\n\r\n  if (snake.y >= height) {\r\n    snake.y = 0;\r\n  }\r\n}\r\n\r\nfunction roundCell(num, cell) {\r\n  return Math.round(num / cell) * cell;\r\n}\r\n\r\ndocument.addEventListener('keydown', function (e) {\r\n  if (e.code === 'ArrowUp') {\r\n    if (keyDirection === null || keyDirection !== 'down') {\r\n      snake.dx = 0;\r\n      snake.dy = -cell;\r\n      keyDirection = 'up';\r\n    }\r\n\r\n  }\r\n\r\n  if (e.code === 'ArrowDown') {\r\n    if (keyDirection === null || keyDirection !== 'up') {\r\n      snake.dx = 0;\r\n      snake.dy = cell;\r\n      keyDirection = 'down';\r\n    }\r\n  }\r\n\r\n  if (e.code === 'ArrowLeft') {\r\n    if (keyDirection === null || keyDirection !== 'right') {\r\n      snake.dx = -cell;\r\n      snake.dy = 0;\r\n      keyDirection = 'left';\r\n    }\r\n  }\r\n\r\n  if (e.code === 'ArrowRight') {\r\n    if (keyDirection === null || keyDirection !== 'left') {\r\n      snake.dx = cell;\r\n      snake.dy = 0;\r\n      keyDirection = 'right';\r\n    }\r\n  }\r\n});\r\n","const restartBtn = document.querySelector('.js-tic-tac-toe__restart');\r\nconst newGameBtn = document.querySelector('.js-tic-tac-toe__new-game');\r\nconst easyLevelBtn = document.querySelector('.js-tic-tac-toe__easy-level');\r\nconst hardLevelBtn = document.querySelector('.js-tic-tac-toe__hard-level');\r\nconst gameBoard = document.querySelector('.js-tic-tac-toe__game');\r\nconst winText = document.querySelector('.js-tic-tac-toe__win-text');\r\nlet cells;\r\nlet keyLevel = 'easy';\r\nconst huPlayer = 'X';\r\nconst aiPlayer = 'O';\r\nconst huSymbol = `<svg class=\"cross\">\r\n<line class=\"cross-first\" x1=\"10\" y1=\"10\" x2=\"70\" y2=\"70\" stroke=\"#333\" stroke-width=\"10\" stroke-linecap=\"round\" />\r\n<line class=\"cross-second\" x1=\"70\" y1=\"10\" x2=\"10\" y2=\"70\" stroke=\"#333\" stroke-width=\"10\" stroke-linecap=\"round\" />\r\n</svg>`;\r\nconst aiSymbol = `<svg class=\"circle\">\r\n<circle r=\"30\" cx=\"40\" cy=\"40\" stroke=\"#c15746\" stroke-width=\"10\" fill=\"none\" stroke-linecap=\"round\" />\r\n</svg>`;\r\n\r\nlet origBoard;\r\nconst winCombos = [\r\n  [0, 1, 2],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n  [0, 3, 6],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [0, 4, 8],\r\n  [6, 4, 2]\r\n];\r\n\r\nif (gameBoard !== null) {\r\n  initGame();\r\n\r\n  newGameBtn.addEventListener('click', () => {\r\n    easyLevelBtn.removeAttribute('disabled');\r\n    hardLevelBtn.removeAttribute('disabled');\r\n    newGameBtn.setAttribute('disabled', 'disabled');\r\n    restartBtn.setAttribute('disabled', 'disabled');\r\n  })\r\n\r\n  easyLevelBtn.addEventListener('click', () => {\r\n    checkLevel('easy');\r\n  })\r\n\r\n  hardLevelBtn.addEventListener('click', () => {\r\n    checkLevel('hard');\r\n  })\r\n\r\n  restartBtn.addEventListener('click', () => {\r\n    startGame();\r\n  })\r\n}\r\n\r\nfunction checkLevel(level) {\r\n  keyLevel = level;\r\n  startGame();\r\n  restartBtn.removeAttribute('disabled');\r\n  newGameBtn.removeAttribute('disabled');\r\n  easyLevelBtn.setAttribute('disabled', 'disabled');\r\n  hardLevelBtn.setAttribute('disabled', 'disabled');\r\n}\r\n\r\nfunction initGame() {\r\n  for (let i = 0; i < 9; i++) {\r\n    const cell = document.createElement('div');\r\n    cell.setAttribute('id', i);\r\n    cell.classList.add('tic-tac-toe__cell');\r\n    gameBoard.appendChild(cell);\r\n  }\r\n  cells = document.querySelectorAll('.tic-tac-toe__cell');\r\n}\r\n\r\nfunction startGame() {\r\n  origBoard = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n  for (let i = 0; i < cells.length; i++) {\r\n    cells[i].innerHTML = '';\r\n    cells[i].classList.add('mouse');\r\n    cells[i].addEventListener('click', turnClick);\r\n  }\r\n  winText.innerText = '';\r\n}\r\n\r\nfunction turnClick(event) {\r\n  if (typeof origBoard[event.target.id] == 'number') {\r\n    turn(event.target.id, huPlayer, huSymbol);\r\n\r\n    if ((!checkTie()) && (!checkWin(origBoard, huPlayer))) {\r\n      turn(bestSport(), aiPlayer, aiSymbol);\r\n    }\r\n  }\r\n}\r\n\r\nfunction turn(squareId, player, playerSymbol) {\r\n  origBoard[squareId] = player;\r\n  document.getElementById(squareId).innerHTML = playerSymbol;\r\n  cells[squareId].classList.remove('mouse');\r\n\r\n  let gameWon = checkWin(origBoard, player);\r\n  if (gameWon) {\r\n    gameOver(player);\r\n  }\r\n}\r\n\r\nfunction checkWin(board, player) {\r\n  let moves = playerMoves(board, player);\r\n\r\n  for (let win of winCombos) {\r\n    if (win.every((elem) => moves.indexOf(elem) !== -1)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction checkTie() {\r\n  if (emptySquares().length == 0) {\r\n    for (let i = 0; i < cells.length; i++) {\r\n      cells[i].removeEventListener('click', turnClick);\r\n    }\r\n    setTimeout(() => declareWinner('Ничья'), 1500);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction gameOver(player) {\r\n  for (let i = 0; i < cells.length; i++) {\r\n    cells[i].removeEventListener('click', turnClick);\r\n    cells[i].classList.remove('mouse');\r\n  }\r\n  setTimeout(() => declareWinner(player === huPlayer ? 'Вы победили' : 'Вы проиграли'), 1500);\r\n}\r\n\r\nfunction declareWinner(who) {\r\n  winText.innerText = who;\r\n}\r\n\r\nfunction emptySquares() {\r\n  return origBoard.filter((cell) => typeof cell == 'number');\r\n}\r\n\r\nfunction playerMoves(board, player) {\r\n  let results = [];\r\n\r\n  for (let i = 0; i < board.length; i++) {\r\n    const e = board[i];\r\n    if (e === player) {\r\n      results = results.concat(i);\r\n    }\r\n  }\r\n  return results;\r\n}\r\n\r\nfunction bestSport() {\r\n  if (keyLevel === 'easy') {\r\n    return bestSportEasy();\r\n  }\r\n  else if (keyLevel === 'hard') {\r\n    return bestSportHard();\r\n  }\r\n  else {\r\n    return bestSportHard();\r\n  }\r\n}\r\n\r\nfunction bestSportEasy() {\r\n  let arr = emptySquares();\r\n  let moves = playerMoves(origBoard, huPlayer);\r\n\r\n  for (let win of winCombos) {\r\n    if ((moves.includes(win[0])) && (moves.includes(win[1]))) {\r\n      if (arr.includes(win[2])) {\r\n        return win[2];\r\n      }\r\n    } else if ((moves.includes(win[0])) && (moves.includes(win[2]))) {\r\n      if (arr.includes(win[3])) {\r\n        return win[1];\r\n      }\r\n    } else if ((moves.includes(win[1])) && (moves.includes(win[2]))) {\r\n      if (arr.includes(win[0])) {\r\n        return win[0];\r\n      }\r\n    }\r\n  }\r\n  let index = Math.floor(Math.random() * arr.length);\r\n  return arr[index];\r\n}\r\n\r\nfunction bestSportHard() {\r\n  let arr = minimax(origBoard, aiPlayer);\r\n  return arr.index;\r\n}\r\n\r\nfunction minimax(newBoard, player) {\r\n  let availSpots = emptySquares();\r\n\r\n  if (checkWin(newBoard, huPlayer)) {\r\n    return { score: -10 };\r\n  } else if (checkWin(newBoard, aiPlayer)) {\r\n    return { score: 10 };\r\n  } else if (availSpots.length === 0) {\r\n    return { score: 0 };\r\n  }\r\n  let moves = [];\r\n\r\n  for (let i = 0; i < availSpots.length; i++) {\r\n    let move = [];\r\n\r\n    move.index = newBoard[availSpots[i]];\r\n    newBoard[availSpots[i]] = player;\r\n\r\n    if (player == aiPlayer) {\r\n      let result = minimax(newBoard, huPlayer);\r\n      move.score = result.score;\r\n    } else {\r\n      let result = minimax(newBoard, aiPlayer);\r\n      move.score = result.score;\r\n    }\r\n\r\n    newBoard[availSpots[i]] = move.index;\r\n    moves.push(move);\r\n  }\r\n\r\n  let bestMove;\r\n\r\n  if (player === aiPlayer) {\r\n    let bestScore = -Infinity;\r\n    for (let i = 0; i < moves.length; i++) {\r\n      if (moves[i].score > bestScore) {\r\n        bestScore = moves[i].score;\r\n        bestMove = i;\r\n      }\r\n    }\r\n  } else {\r\n    let bestScore = Infinity;\r\n    for (let i = 0; i < moves.length; i++) {\r\n      if (moves[i].score < bestScore) {\r\n        bestScore = moves[i].score;\r\n        bestMove = i;\r\n      }\r\n    }\r\n  }\r\n  return moves[bestMove];\r\n}"]}