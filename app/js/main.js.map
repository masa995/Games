{"version":3,"sources":["dataPopup.js","popup.js","snake.js","ticTacToe.js","main.js"],"names":["dataRules","textRules","popup","document","querySelector","popupBody","popupClose","popupText","popupOpenBtns","querySelectorAll","mapRuls","name","ticTacToe","snake","addEventListener","e","classList","remove","target","closest","forEach","el","add","rulesNum","currentTarget","getAttribute","innerHTML","concat","Canvas","_classCallCheck","this","canvas","createCanvas","context","getContext","game","createElement","appendChild","Board","cell","mainEl","scoreEl","createScore","indentCell","score","widthCanvas","clientWidth","heightCanvas","clientHeight","widthGame","roundCell","heightGame","setAttribute","rowGame","columnGame","barrier","levelEasy","levelHard","x","y","barrierMap","drawGameBoard","level","num","Math","round","fillStyle","fillRect","drawScore","drawBarrier","_this","textContent","Berry","board","radius","pi","PI","beginPath","arc","fill","closePath","getRandomInt","snakeTail","_this2","coordinats","elem","length","Snake","controlScreenKey","dx","dy","tails","maxTails","keyDirection","createScreenBtns","activeControlScreen","handleControl","bind","handleControlScreen","event","code","contains","insertAdjacentHTML","berry","animationStart","animationFps","animationSpeed","unshift","pop","crachSnake","eatSnake","_this3","index","i","deth","zeroScore","newPosition","_this4","updateScore","_this5","removeEventListener","Game","btnsMenu","activeMenuBtn","arguments","undefined","newGameBtn","selectorNewGame","restartBtn","selectorRestart","easyLevelBtn","selectorEasyLevel","hardLevelBtn","selectorHardLevel","btnMenu","selectorBtnMenu","listMenu","selectorListMenu","fps","startTime","currentTime","time","currentSecond","speed","gameLoopSnake","btns","_this6","removeAttribute","checkLevel","activeMenu","toggle","updateMap","requestAnimationFrame","Date","getTime","floor","clearRect","draw","update","min","max","random","window","matchMedia","matches","isTouchDevice","TicTacToe","selectorBoard","selectorText","gameBoard","winText","origBoard","cells","keyLevel","huPlayer","aiPlayer","huSymbol","aiSymbol","winCombos","handleTurnClick","id","turn","checkTie","checkWin","BestSport","init","who","innerText","start","squareId","player","playerSymbol","getElementById","gameOver","_step","moves","playerMoves","_iterator","_createForOfIteratorHelper","s","n","done","value","every","indexOf","err","f","emptySquares","setTimeout","whoWinner","filter","results","BestSportEasy","BestSportHard","_step2","arr","_iterator2","win","includes","minimax","newBoard","emptySpots","bestMove","move","result","push","bestScore","Infinity","ontouchstart"],"mappings":"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","file":"main.js","sourcesContent":["const dataRules = [\r\n  {\r\n    textRules: `<p>Крестки-нолики</p>\r\n                <p>Игроки по очереди ставят на свободные клетки поля символы (один всегда крестики, другой всегда нолики). Первый, выстроивший в ряд 3 символа по вертикали, горизонтали или диагонали, выигрывает. Первый ход делает игрок, ставящий крестики.</p>`\r\n  },\r\n\r\n  {\r\n    textRules: `<p>Змейка</p>\r\n                <p>Цель игры заключается в том, чтобы змейка съела как можно больше ягод. После каждой съеденной ягоды количество очков и размер змейки увеличивается.</p>\r\n                <p>Если змейка врежется в саму себя, то игра закончиться. На сложном уровне добавляются препятствия (серые кубы), с которыми змейка, также не должна сталкиваться.</p>\r\n                <p>Управление осуществляется стрелочками на клавиатуре.</p>`\r\n\r\n\r\n  }\r\n]","const popup = document.querySelector('.js-popup');\r\nconst popupBody = document.querySelector('.js-popup__body');\r\nconst popupClose = document.querySelector('.js-popup__close-btn');\r\nconst popupText = document.querySelector('.js-popup__text');\r\nconst popupOpenBtns = document.querySelectorAll('.js-btn-ruls');\r\n\r\nif (popup !== null) {\r\n  popupClose.addEventListener('click', (e) => {\r\n    popup.classList.remove('active');\r\n  });\r\n\r\n  popupBody.addEventListener('click', (e) => {\r\n    if (!e.target.closest('.js-popup__content')) {\r\n      popup.classList.remove('active');\r\n    }\r\n  })\r\n\r\n  popupOpenBtns.forEach((el) => {\r\n    el.addEventListener('click', (e) => {\r\n      popup.classList.add('active');\r\n      const rulesNum = mapRuls(e.currentTarget.getAttribute('data-ruls'));\r\n      const { textRules } = dataRules[rulesNum];\r\n      popupText.innerHTML = `${textRules}`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction mapRuls(name) {\r\n  const gamesRules = {\r\n    ticTacToe: 0,\r\n    snake: 1\r\n  }\r\n  return gamesRules[name];\r\n}","'use strict'\r\nclass Canvas {\r\n  constructor() {\r\n    this.canvas = this.createCanvas();\r\n    this.context = this.canvas.getContext('2d');\r\n  }\r\n\r\n  createCanvas() {\r\n    const game = document.querySelector('.js-snake');\r\n    const canvas = document.createElement('canvas');\r\n    canvas.classList.add('snake__game', 'js-snake__game');\r\n    game.appendChild(canvas);\r\n    return canvas;\r\n  }\r\n}\r\n\r\nclass Board {\r\n  constructor(canvas, cell) {\r\n    this.mainEl = document.querySelector('.js-snake');\r\n    this.scoreEl = this.createScore();\r\n\r\n    this.cell = cell;\r\n    this.indentCell = 2;\r\n    this.score = 0;\r\n    this.context = canvas.context;\r\n    this.canvas = canvas.canvas;\r\n\r\n    this.widthCanvas = this.mainEl.clientWidth / 2;\r\n    this.heightCanvas = this.mainEl.clientHeight - 300;\r\n\r\n    this.widthGame = this.roundCell(this.widthCanvas, this.cell);\r\n    this.heightGame = this.roundCell(this.heightCanvas, this.cell);\r\n    this.canvas.setAttribute('width', this.widthGame);\r\n    this.canvas.setAttribute('height', this.heightGame);\r\n\r\n    this.rowGame = this.widthGame / this.cell;\r\n    this.columnGame = this.heightGame / this.cell;\r\n\r\n    this.barrier = {\r\n      levelEasy: [],\r\n      levelHard: [\r\n        { x: 0, y: 0 },\r\n        { x: 0, y: this.cell },\r\n        { x: this.cell, y: 0 },\r\n        { x: this.cell, y: this.cell },\r\n        { x: 0, y: this.heightGame - this.cell },\r\n        { x: 0, y: this.heightGame - this.cell * 2 },\r\n        { x: this.cell, y: this.heightGame - this.cell },\r\n        { x: this.cell, y: this.heightGame - this.cell * 2 },\r\n        { x: this.widthGame - this.cell, y: this.heightGame - this.cell },\r\n        { x: this.widthGame - this.cell, y: this.heightGame - this.cell * 2 },\r\n        { x: this.widthGame - this.cell * 2, y: this.heightGame - this.cell },\r\n        { x: this.widthGame - this.cell * 2, y: this.heightGame - this.cell * 2 },\r\n        { x: this.widthGame - this.cell, y: 0 },\r\n        { x: this.widthGame - this.cell * 2, y: 0 },\r\n        { x: this.widthGame - this.cell, y: this.cell },\r\n        { x: this.widthGame - this.cell * 2, y: this.cell }\r\n      ]\r\n    }\r\n    this.barrierMap = this.barrier.levelEasy;\r\n\r\n    this.drawGameBoard();\r\n  }\r\n\r\n  createScore() {\r\n    const game = document.querySelector('.js-snake')\r\n    const score = document.createElement('p');\r\n    score.classList.add('snake__score-text', 'js-snake__score-text');\r\n    game.appendChild(score);\r\n    return score;\r\n  }\r\n\r\n  updateMap(level) {\r\n    this.barrierMap = level;\r\n  }\r\n\r\n  roundCell(num, cell) {\r\n    return Math.round(num / cell) * cell;\r\n  }\r\n\r\n  drawGameBoard() {\r\n    for (let y = 0; y < this.columnGame; y++) {\r\n      for (let x = 0; x < this.rowGame; x++) {\r\n        this.context.fillStyle = 'rgba(255, 255, 255, 0.4)';\r\n        this.context.fillRect(x * this.cell, y * this.cell, this.cell - this.indentCell, this.cell - this.indentCell);\r\n      }\r\n    }\r\n\r\n    this.drawScore(this.score);\r\n    this.drawBarrier();\r\n  }\r\n\r\n  drawBarrier() {\r\n    this.barrierMap.forEach((el) => {\r\n      this.context.fillStyle = '#333333';\r\n      this.context.fillRect(el.x, el.y, this.cell - this.indentCell, this.cell - this.indentCell);\r\n    });\r\n  }\r\n\r\n  drawScore() {\r\n    return this.scoreEl.textContent = `Счет: ${this.score}`;\r\n  }\r\n\r\n  zeroScore() {\r\n    this.score = 0;\r\n    return this.scoreEl.textContent = `Счет: 0`;\r\n  }\r\n\r\n  updateScore(num) {\r\n    this.score++;\r\n    this.drawScore();\r\n  }\r\n}\r\n\r\nclass Berry {\r\n  constructor(canvas, board) {\r\n    this.context = canvas.context;\r\n    this.cell = board.cell;\r\n    this.radius = this.cell / 3;\r\n    this.rowGame = board.rowGame;\r\n    this.columnGame = board.columnGame;\r\n    this.pi = Math.PI;\r\n    this.x;\r\n    this.y;\r\n  }\r\n\r\n  draw() {\r\n    this.context.beginPath();\r\n    this.context.fillStyle = \"#a66210\";\r\n    this.context.arc(this.x + (this.cell / 2), this.y + (this.cell / 2), this.radius, 0, this.pi * 2);\r\n    this.context.fill();\r\n    this.context.closePath();\r\n  }\r\n\r\n  coordinats() {\r\n    this.x = getRandomInt(0, this.rowGame) * this.cell;\r\n    this.y = getRandomInt(0, this.columnGame) * this.cell;\r\n  }\r\n\r\n  newPosition(snakeTail, barrierMap) {\r\n    this.coordinats();\r\n\r\n    snakeTail.forEach((elem) => {\r\n      if (elem.x === this.x && elem.y === this.y) {\r\n        this.coordinats();\r\n      }\r\n    });\r\n\r\n    if (barrierMap.length > 0) {\r\n      barrierMap.forEach((elem) => {\r\n        if (elem.x === this.x && elem.y === this.y) {\r\n          this.coordinats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nclass Snake {\r\n  constructor(canvas, board, controlScreenKey) {\r\n    this.context = canvas.context;\r\n    this.cell = board.cell;\r\n    this.indentCell = board.indentCell;\r\n    this.heightGame = board.heightGame;\r\n    this.x = 0;\r\n    this.y = this.cell * 3;\r\n    this.dx = this.cell\r\n    this.dy = 0;\r\n    this.tails = [{ x: 0, y: this.cell * 3 }];\r\n    this.maxTails = 3;\r\n    this.keyDirection = null;\r\n    this.controlScreenKey = controlScreenKey;\r\n\r\n    this.createScreenBtns();\r\n    this.activeControlScreen(this.activeControlScreen);\r\n    this.handleControl = this.handleControl.bind(this);\r\n    this.handleControlScreen = this.handleControlScreen.bind(this);\r\n  }\r\n\r\n  handleControl(event) {\r\n    if (event.code === 'ArrowUp') {\r\n      if (this.keyDirection === null || this.keyDirection !== 'down') {\r\n        this.dx = 0;\r\n        this.dy = -this.cell;\r\n        this.keyDirection = 'up';\r\n      }\r\n    }\r\n\r\n    if (event.code === 'ArrowDown') {\r\n      if (this.keyDirection === null || this.keyDirection !== 'up') {\r\n        this.dx = 0;\r\n        this.dy = this.cell;\r\n        this.keyDirection = 'down';\r\n      }\r\n    }\r\n\r\n    if (event.code === 'ArrowLeft') {\r\n      if (this.keyDirection === null || this.keyDirection !== 'right') {\r\n        this.dx = -this.cell;\r\n        this.dy = 0;\r\n        this.keyDirection = 'left';\r\n      }\r\n    }\r\n\r\n    if (event.code === 'ArrowRight') {\r\n      if (this.keyDirection === null || this.keyDirection !== 'left') {\r\n        this.dx = this.cell;\r\n        this.dy = 0;\r\n        this.keyDirection = 'right';\r\n      }\r\n    }\r\n  }\r\n\r\n  handleControlScreen(event) {\r\n    if (event.target.classList.contains('js-btn__up')) {\r\n      if (this.keyDirection === null || this.keyDirection !== 'down') {\r\n        this.dx = 0;\r\n        this.dy = -this.cell;\r\n        this.keyDirection = 'up';\r\n      }\r\n    }\r\n\r\n    if (event.target.classList.contains('js-btn__down')) {\r\n      if (this.keyDirection === null || this.keyDirection !== 'up') {\r\n        this.dx = 0;\r\n        this.dy = this.cell;\r\n        this.keyDirection = 'down';\r\n      }\r\n    }\r\n\r\n    if (event.target.classList.contains('js-btn__left')) {\r\n      if (this.keyDirection === null || this.keyDirection !== 'right') {\r\n        this.dx = -this.cell;\r\n        this.dy = 0;\r\n        this.keyDirection = 'left';\r\n      }\r\n    }\r\n\r\n    if (event.target.classList.contains('js-btn__right')) {\r\n      if (this.keyDirection === null || this.keyDirection !== 'left') {\r\n        this.dx = this.cell;\r\n        this.dy = 0;\r\n        this.keyDirection = 'right';\r\n      }\r\n    }\r\n  }\r\n\r\n  createScreenBtns() {\r\n    const mainEl = document.querySelector('.js-snake');\r\n    mainEl.insertAdjacentHTML(\r\n      'beforeend',\r\n      `<div class=\"snake__box-left snake-box js-snake-box\">\r\n        <button class=\"snake__control-btn js-btn__left\">&#129104;</button>\r\n        <button class=\"snake__control-btn js-btn__right\">&#129106;</button>\r\n      </div>\r\n\r\n      <div class=\"snake__box-right snake-box js-snake-box\">\r\n        <button class=\"snake__control-btn js-btn__up\">&#129105;</button>\r\n        <button class=\"snake__control-btn js-btn__down\">&#129107;</button>\r\n      </div>`);\r\n  }\r\n\r\n  activeControlScreen(controlScreenKey) {\r\n    if (this.controlScreenKey) {\r\n      const boxControlEls = document.querySelectorAll('.snake-box');\r\n      boxControlEls.forEach((el) => {\r\n        el.classList.add('active');\r\n      });\r\n    }\r\n  }\r\n\r\n  update(berry, board, animationStart, animationFps, animationSpeed) {\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n\r\n    //Collision Border\r\n    if (this.x < 0) {\r\n      this.x = board.widthGame - this.cell;\r\n    } else if (this.x >= board.widthGame) {\r\n      this.x = 0;\r\n    }\r\n\r\n    if (this.y < 0) {\r\n      this.y = board.heightGame - this.cell;\r\n    } else if (this.y >= board.heightGame) {\r\n      this.y = 0;\r\n    }\r\n\r\n    this.tails.unshift({ x: this.x, y: this.y });\r\n\r\n    if (this.tails.length > this.maxTails) {\r\n      this.tails.pop();\r\n    }\r\n\r\n    this.crachSnake(berry, board, animationStart, animationFps);\r\n    this.eatSnake(berry, board, animationSpeed);\r\n  }\r\n\r\n  crachSnake(berry, board, animationStart, animationFps) {\r\n    this.tails.forEach((el, index) => {\r\n      for (let i = index + 1; i < this.tails.length; i++) {\r\n        if (el.x === this.tails[i].x && el.y === this.tails[i].y) {\r\n          this.deth(animationStart, animationFps);\r\n          board.zeroScore();\r\n          berry.newPosition(this.tails, board.barrierMap)\r\n        }\r\n      }\r\n    });\r\n\r\n    board.barrierMap.forEach((el) => {\r\n      if (el.x === this.tails[0].x && el.y === this.tails[0].y) {\r\n        this.deth(animationStart, animationFps);\r\n        board.zeroScore();\r\n        berry.newPosition(this.tails, board.barrierMap);\r\n      }\r\n    });\r\n  }\r\n\r\n  eatSnake(berry, board, animationSpeed) {\r\n    this.tails.forEach((el) => {\r\n      if (el.x === berry.x && el.y === berry.y) {\r\n        this.maxTails++;\r\n        board.updateScore();\r\n        berry.newPosition(this.tails, board.barrierMap);\r\n\r\n        animationSpeed = animationSpeed + 0.7;\r\n      }\r\n    });\r\n  }\r\n\r\n  draw() {\r\n    this.tails.forEach((el, index) => {\r\n      if (index == 0) {\r\n        this.context.fillStyle = '#333333';\r\n      } else {\r\n        this.context.fillStyle = '#555555';\r\n      }\r\n\r\n      this.context.fillRect(el.x, el.y, this.cell - this.indentCell, this.cell - this.indentCell);\r\n    });\r\n  }\r\n\r\n  deth(animationStart, animationFps) {\r\n    this.x = 0;\r\n    this.y = this.cell * 3;\r\n    this.dx = this.cell;\r\n    this.dy = 0;\r\n    this.tails = [{ x: 0, y: this.cell * 3 }];\r\n    this.maxTails = 3;\r\n    this.keyDirection = null;\r\n    animationStart = 0;\r\n    animationFps = 300;\r\n\r\n    document.removeEventListener('click', this.handleControlScreen);\r\n    document.removeEventListener('keydown', this.handleControl);\r\n  }\r\n}\r\n\r\nclass Game {\r\n  constructor(btnsMenu, activeMenuBtn, cell, controlScreenKey = false) {\r\n    this.newGameBtn = document.querySelector(btnsMenu.selectorNewGame);\r\n    this.restartBtn = document.querySelector(btnsMenu.selectorRestart);\r\n    this.easyLevelBtn = document.querySelector(btnsMenu.selectorEasyLevel);\r\n    this.hardLevelBtn = document.querySelector(btnsMenu.selectorHardLevel);\r\n    this.btnMenu = document.querySelector(activeMenuBtn.selectorBtnMenu);\r\n    this.listMenu = document.querySelector(activeMenuBtn.selectorListMenu);\r\n    this.fps = 300;\r\n    this.startTime = 0;\r\n    this.currentTime = 0;\r\n    this.time = 0;\r\n    this.currentSecond = 0\r\n    this.speed = 0;\r\n    this.cell = cell;\r\n    this.controlScreenKey = controlScreenKey;\r\n\r\n    this.canvas = new Canvas();\r\n    this.board = new Board(this.canvas, this.cell);\r\n    this.berry = new Berry(this.canvas, this.board);\r\n    this.snake = new Snake(this.canvas, this.board, this.controlScreenKey);\r\n\r\n    this.gameLoopSnake = this.gameLoopSnake.bind(this);\r\n    this.gameLoopSnake();\r\n    this.btns();\r\n\r\n    this.berry.newPosition(this.snake.tails, this.board.barrierMap);\r\n  }\r\n\r\n  btns() {\r\n    this.newGameBtn.addEventListener('click', () => {\r\n      this.easyLevelBtn.removeAttribute('disabled');\r\n      this.hardLevelBtn.removeAttribute('disabled');\r\n      this.newGameBtn.setAttribute('disabled', 'disabled');\r\n      this.restartBtn.setAttribute('disabled', 'disabled');\r\n    });\r\n\r\n    this.easyLevelBtn.addEventListener('click', () => {\r\n      this.checkLevel(this.board.barrier.levelEasy);\r\n\r\n      if (this.controlScreenKey) {\r\n        document.addEventListener('click', this.snake.handleControlScreen);\r\n      } else {\r\n        document.addEventListener('keydown', this.snake.handleControl);\r\n      }\r\n      this.activeMenu();\r\n    });\r\n\r\n    this.hardLevelBtn.addEventListener('click', () => {\r\n      this.checkLevel(this.board.barrier.levelHard);\r\n\r\n      if (this.controlScreenKey) {\r\n        document.addEventListener('click', this.snake.handleControlScreen);\r\n      } else {\r\n        document.addEventListener('keydown', this.snake.handleControl);\r\n      }\r\n      this.activeMenu();\r\n    });\r\n\r\n    this.restartBtn.addEventListener('click', () => {\r\n      //Refresh Game\r\n      this.snake.deth(this.startTime, this.fps);\r\n      this.board.zeroScore();\r\n      this.berry.newPosition(this.snake.tails, this.board.barrierMap)\r\n\r\n      if (this.controlScreenKey) {\r\n        document.addEventListener('click', this.snake.handleControlScreen);\r\n      } else {\r\n        document.addEventListener('keydown', this.snake.handleControl);\r\n      }\r\n      this.activeMenu();\r\n    });\r\n  }\r\n\r\n  activeMenu() {\r\n    btnMenu.classList.toggle('active');\r\n    listMenu.classList.toggle('active');\r\n  }\r\n\r\n  checkLevel(level) {\r\n    this.board.updateMap(level);\r\n    this.snake.deth(this.startTime, this.fps);\r\n    this.board.zeroScore();\r\n    this.berry.newPosition(this.snake.tails, this.board.barrierMap)\r\n\r\n    this.restartBtn.removeAttribute('disabled');\r\n    this.newGameBtn.removeAttribute('disabled');\r\n    this.easyLevelBtn.setAttribute('disabled', 'disabled');\r\n    this.hardLevelBtn.setAttribute('disabled', 'disabled');\r\n  }\r\n\r\n\r\n\r\n  gameLoopSnake() {\r\n    requestAnimationFrame(this.gameLoopSnake);\r\n\r\n    if (this.startTime === 0) {\r\n      this.startTime = new Date().getTime();\r\n    }\r\n\r\n    this.currentTime = new Date().getTime();\r\n    this.time = this.currentTime - this.startTime;\r\n    this.currentSecond = Math.floor(this.time / (this.fps - this.speed));\r\n\r\n    if (this.currentSecond > 0) {\r\n      this.startTime = 0;\r\n\r\n      this.canvas.context.clearRect(0, 0, this.board.widthGame, this.board.heightGame);\r\n\r\n      this.board.drawGameBoard();\r\n      this.berry.draw();\r\n      this.snake.draw();\r\n      this.snake.update(this.berry, this.board, this.startTime, this.fps, this.speed);\r\n    }\r\n  }\r\n}\r\n\r\nconst game = document.querySelector('.js-snake');\r\nconst btnsMenu = {\r\n  selectorNewGame: '.js-snake__new-game',\r\n  selectorRestart: '.js-snake__restart',\r\n  selectorEasyLevel: '.js-snake__easy-level',\r\n  selectorHardLevel: '.js-snake__hard-level'\r\n}\r\n\r\nconst activeMenuBtn = {\r\n  selectorBtnMenu: '.js-btns-menu__icon',\r\n  selectorListMenu: '.js-btns-menu__list'\r\n}\r\n\r\nif (game !== null) {\r\n  if (window.matchMedia('(min-width: 1100px)').matches && isTouchDevice()) {\r\n    new Game(btnsMenu, activeMenuBtn, 25, true);\r\n  } else if (window.matchMedia('(max-width: 1100px)').matches) {\r\n    new Game(btnsMenu, activeMenuBtn, 20, true);\r\n  } else if (window.matchMedia('(max-width: 1100px)').matches) {\r\n    new Game(btnsMenu, activeMenuBtn, 15, true);\r\n  } else {\r\n    new Game(btnsMenu, activeMenuBtn, 25, false);\r\n  }\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}","'use strict'\r\nclass TicTacToe {\r\n  constructor(selectorBoard, selectorText, selectorNewGame, selectorRestart, selectorEasyLevel, selectorHardLevel) {\r\n    this.gameBoard = document.querySelector(selectorBoard);\r\n    this.winText = document.querySelector(selectorText);\r\n\r\n    this.newGameBtn = document.querySelector(selectorNewGame);\r\n    this.restartBtn = document.querySelector(selectorRestart);\r\n    this.easyLevelBtn = document.querySelector(selectorEasyLevel);\r\n    this.hardLevelBtn = document.querySelector(selectorHardLevel);\r\n\r\n    this.origBoard;\r\n    this.cells;\r\n    this.keyLevel = 'easy';\r\n\r\n    this.huPlayer = 'X';\r\n    this.aiPlayer = 'O';\r\n\r\n    this.huSymbol = `<svg class=\"cross\">\r\n    <line class=\"cross-first\" x1=\"10\" y1=\"10\" x2=\"70\" y2=\"70\" stroke=\"#333\" stroke-width=\"10\" stroke-linecap=\"round\" />\r\n    <line class=\"cross-second\" x1=\"70\" y1=\"10\" x2=\"10\" y2=\"70\" stroke=\"#333\" stroke-width=\"10\" stroke-linecap=\"round\" />\r\n    </svg>`;\r\n    this.aiSymbol = `<svg class=\"circle\">\r\n    <circle r=\"30\" cx=\"40\" cy=\"40\" stroke=\"#c15746\" stroke-width=\"10\" fill=\"none\" stroke-linecap=\"round\" />\r\n    </svg>`;\r\n\r\n    this.winCombos = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [6, 4, 2]\r\n    ];\r\n\r\n    this.handleTurnClick = (event) => {\r\n      if (typeof this.origBoard[event.target.id] == 'number') {\r\n        this.turn(event.target.id, this.huPlayer, this.huSymbol);\r\n\r\n        if ((!this.checkTie()) && (!this.checkWin(this.origBoard, this.huPlayer))) {\r\n          this.turn(this.BestSport(), this.aiPlayer, this.aiSymbol);\r\n        }\r\n      }\r\n    };\r\n\r\n    this.init();\r\n  }\r\n\r\n  whoWinner(who) {\r\n    this.winText.innerText = who;\r\n  }\r\n\r\n  init() {\r\n    for (let i = 0; i < 9; i++) {\r\n      const cell = document.createElement('div');\r\n      cell.setAttribute('id', i);\r\n      cell.classList.add('tic-tac-toe__cell');\r\n      this.gameBoard.appendChild(cell);\r\n    }\r\n    this.cells = document.querySelectorAll('.tic-tac-toe__cell');\r\n\r\n    this.newGameBtn.addEventListener('click', () => {\r\n      this.easyLevelBtn.removeAttribute('disabled');\r\n      this.hardLevelBtn.removeAttribute('disabled');\r\n      this.newGameBtn.setAttribute('disabled', 'disabled');\r\n      this.restartBtn.setAttribute('disabled', 'disabled');\r\n    })\r\n\r\n    this.easyLevelBtn.addEventListener('click', () => {\r\n      this.checkLevel('easy');\r\n    })\r\n\r\n    this.hardLevelBtn.addEventListener('click', () => {\r\n      this.checkLevel('hard');\r\n    })\r\n\r\n    this.restartBtn.addEventListener('click', () => {\r\n      this.start();\r\n    })\r\n  }\r\n\r\n  checkLevel(level) {\r\n    this.keyLevel = level;\r\n    this.start();\r\n    this.restartBtn.removeAttribute('disabled');\r\n    this.newGameBtn.removeAttribute('disabled');\r\n    this.easyLevelBtn.setAttribute('disabled', 'disabled');\r\n    this.hardLevelBtn.setAttribute('disabled', 'disabled');\r\n  }\r\n\r\n  start() {\r\n    this.origBoard = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n    for (let i = 0; i < this.cells.length; i++) {\r\n      this.cells[i].innerHTML = '';\r\n      this.cells[i].classList.add('pointer');\r\n      this.cells[i].addEventListener('click', this.handleTurnClick)\r\n\r\n      this.winText.innerText = '';\r\n    }\r\n  }\r\n\r\n  turn(squareId, player, playerSymbol) {\r\n    this.origBoard[squareId] = player;\r\n    document.getElementById(squareId).innerHTML = playerSymbol;\r\n    this.cells[squareId].removeEventListener('click', this.handleTurnClick);\r\n    this.cells[squareId].classList.remove('pointer');\r\n\r\n    let gameWon = this.checkWin(this.origBoard, player);\r\n    if (gameWon) {\r\n      this.gameOver(player);\r\n    }\r\n  }\r\n\r\n  checkWin(board, player) {\r\n    let moves = this.playerMoves(board, player);\r\n\r\n    for (let win of this.winCombos) {\r\n      if (win.every((elem) => moves.indexOf(elem) !== -1)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkTie() {\r\n    if (this.emptySquares().length == 0) {\r\n      for (let i = 0; i < this.cells.length; i++) {\r\n        this.cells[i].removeEventListener('click', this.handleTurnClick);\r\n      }\r\n      setTimeout(() => this.whoWinner('Ничья'), 1200);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  gameOver(player) {\r\n    for (let i = 0; i < this.cells.length; i++) {\r\n      this.cells[i].removeEventListener('click', this.handleTurnClick);\r\n      this.cells[i].classList.remove('pointer');\r\n    }\r\n\r\n    setTimeout(() => this.whoWinner(player === this.huPlayer ? 'Вы победили' : 'Вы проиграли'), 1200);\r\n  }\r\n\r\n\r\n  emptySquares() {\r\n    return this.origBoard.filter((cell) => typeof cell == 'number');\r\n  }\r\n\r\n  playerMoves(board, player) {\r\n    let results = [];\r\n\r\n    for (let i = 0; i < board.length; i++) {\r\n      const e = board[i];\r\n      if (e === player) {\r\n        results = results.concat(i);\r\n      }\r\n    }\r\n    return results;\r\n  }\r\n\r\n  BestSport() {\r\n    if (this.keyLevel === 'easy') {\r\n      return this.BestSportEasy();\r\n    }\r\n    else if (this.keyLevel === 'hard') {\r\n      return this.BestSportHard();\r\n    }\r\n  }\r\n\r\n  BestSportEasy() {\r\n    let arr = this.emptySquares();\r\n    let moves = this.playerMoves(this.origBoard, this.huPlayer);\r\n\r\n    for (let win of this.winCombos) {\r\n      if ((moves.includes(win[0])) && (moves.includes(win[1]))) {\r\n        if (arr.includes(win[2])) {\r\n          return win[2];\r\n        }\r\n      } else if ((moves.includes(win[0])) && (moves.includes(win[2]))) {\r\n        if (arr.includes(win[3])) {\r\n          return win[1];\r\n        }\r\n      } else if ((moves.includes(win[1])) && (moves.includes(win[2]))) {\r\n        if (arr.includes(win[0])) {\r\n          return win[0];\r\n        }\r\n      }\r\n    }\r\n\r\n    let index = Math.floor(Math.random() * arr.length);\r\n    return arr[index];\r\n  }\r\n\r\n  BestSportHard() {\r\n    let arr = this.minimax(this.origBoard, this.aiPlayer);\r\n    return arr.index;\r\n  }\r\n\r\n  minimax(newBoard, player) {\r\n    let emptySpots = this.emptySquares();\r\n\r\n    if (this.checkWin(newBoard, this.huPlayer)) {\r\n      return { score: -10 };\r\n    } else if (this.checkWin(newBoard, this.aiPlayer)) {\r\n      return { score: 10 };\r\n    } else if (emptySpots.length === 0) {\r\n      return { score: 0 };\r\n    }\r\n    let moves = [];\r\n\r\n    for (let i = 0; i < emptySpots.length; i++) {\r\n      let move = {};\r\n\r\n      move.index = newBoard[emptySpots[i]];\r\n      newBoard[emptySpots[i]] = player;\r\n\r\n      if (player == this.aiPlayer) {\r\n        let result = this.minimax(newBoard, this.huPlayer);\r\n        move.score = result.score;\r\n      } else {\r\n        let result = this.minimax(newBoard, this.aiPlayer);\r\n        move.score = result.score;\r\n      }\r\n\r\n      newBoard[emptySpots[i]] = move.index;\r\n      moves.push(move);\r\n    }\r\n\r\n    let bestMove;\r\n\r\n    if (player === this.aiPlayer) {\r\n      let bestScore = -Infinity;\r\n      for (let i = 0; i < moves.length; i++) {\r\n        if (moves[i].score > bestScore) {\r\n          bestScore = moves[i].score;\r\n          bestMove = i;\r\n        }\r\n      }\r\n    } else {\r\n      let bestScore = Infinity;\r\n      for (let i = 0; i < moves.length; i++) {\r\n        if (moves[i].score < bestScore) {\r\n          bestScore = moves[i].score;\r\n          bestMove = i;\r\n        }\r\n      }\r\n    }\r\n    return moves[bestMove];\r\n  }\r\n}\r\n\r\nconst game = document.querySelector('.tic-tac-toe');\r\n\r\nif (game !== null) {\r\n  new TicTacToe('.js-tic-tac-toe__game', '.js-tic-tac-toe__win-text', '.js-tic-tac-toe__new-game', '.js-tic-tac-toe__restart', '.js-tic-tac-toe__easy-level', '.js-tic-tac-toe__hard-level');\r\n}\r\n","const btnMenu = document.querySelector('.js-btns-menu__icon');\r\nconst listMenu = document.querySelector('.js-btns-menu__list');\r\n\r\nbtnMenu.addEventListener('click', () => {\r\n  btnMenu.classList.toggle('active');\r\n  listMenu.classList.toggle('active');\r\n});\r\n\r\n// function calculationVH() {\r\n//   const vh = window.innerHeight;\r\n//   document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n// }\r\n// calculationVH();\r\n\r\nfunction isTouchDevice(e) {\r\n  return typeof window.ontouchstart !== 'undefined';\r\n}\r\n"]}