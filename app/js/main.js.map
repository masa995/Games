{"version":3,"sources":["dataPopup.js","popup.js","snake.js","ticTacToe.js"],"names":["dataRules","textRules","popup","document","querySelector","popupBody","popupClose","popupText","popupOpenBtns","querySelectorAll","mapRuls","name","ticTacToe","snake","addEventListener","e","classList","remove","target","closest","forEach","el","add","rulesNum","currentTarget","getAttribute","innerHTML","concat","Canvas","canvasEl","_classCallCheck","this","canvas","context","getContext","Board","mainEl","scoreEl","cell","indentCell","score","widthCanvas","clientWidth","heightCanvas","clientHeight","widthGame","roundCell","heightGame","setAttribute","rowGame","columnGame","barrier","levelEasy","levelHard","x","y","barrierMap","drawGameBoard","level","num","Math","round","fillStyle","fillRect","drawScore","drawBarrier","_this","textContent","Berry","board","radius","pi","PI","beginPath","arc","fill","closePath","getRandomInt","snakeTail","_this2","coordinats","elem","length","Snake","_this3","dx","dy","tails","maxTails","keyDirection","handleControl","event","code","berry","animationStart","animationFps","animationSpeed","unshift","pop","crachSnake","eatSnake","_this4","index","i","deth","zeroScore","newPosition","removeEventListener","_this5","updateScore","_this6","Game","selectorNewGame","selectorRestart","selectorEasyLevel","selectorHardLevel","newGameBtn","restartBtn","easyLevelBtn","hardLevelBtn","fps","startTime","currentTime","time","currentSecond","speed","gameLoopSnake","bind","controls","btns","_this7","removeAttribute","checkLevel","updateMap","requestAnimationFrame","Date","getTime","floor","clearRect","draw","update","min","max","random","game","TicTacToe","selectorBoard","selectorText","gameBoard","winText","origBoard","cells","keyLevel","huPlayer","aiPlayer","huSymbol","aiSymbol","winCombos","handleTurnClick","id","turn","checkTie","checkWin","BestSport","init","who","innerText","createElement","appendChild","start","squareId","player","playerSymbol","getElementById","gameOver","_step","moves","playerMoves","_iterator","_createForOfIteratorHelper","s","n","done","value","every","indexOf","err","f","emptySquares","setTimeout","whoWinner","filter","results","BestSportEasy","BestSportHard","_step2","arr","_iterator2","win","includes","minimax","newBoard","emptySpots","bestMove","move","result","push","bestScore","Infinity"],"mappings":"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","file":"main.js","sourcesContent":["const dataRules = [\r\n  {\r\n    textRules: `<p>Крестки-нолики</p>\r\n                <p>Игроки по очереди ставят на свободные клетки поля символы (один всегда крестики, другой всегда нолики). Первый, выстроивший в ряд 3 символа по вертикали, горизонтали или диагонали, выигрывает. Первый ход делает игрок, ставящий крестики.</p>`\r\n  },\r\n\r\n  {\r\n    textRules: `<p>Змейка</p>\r\n                <p>Цель игры заключается в том, чтобы змейка съела как можно больше ягод. После каждой съеденной ягоды количество очков и размер змейки увеличивается.</p>\r\n                <p>Если змейка врежется в саму себя, то игра закончиться. На сложном уровне добавляются препятствия (серые кубы), с которыми змейка, также не должна сталкиваться.</p>\r\n                <p>Управление осуществляется стрелочками на клавиатуре.</p>`\r\n\r\n\r\n  }\r\n]","const popup = document.querySelector('.js-popup');\r\nconst popupBody = document.querySelector('.js-popup__body');\r\nconst popupClose = document.querySelector('.js-popup__close-btn');\r\nconst popupText = document.querySelector('.js-popup__text');\r\nconst popupOpenBtns = document.querySelectorAll('.js-btn-ruls');\r\n\r\nif (popup !== null) {\r\n  popupClose.addEventListener('click', (e) => {\r\n    popup.classList.remove('active');\r\n  });\r\n\r\n  popupBody.addEventListener('click', (e) => {\r\n    if (!e.target.closest('.js-popup__content')) {\r\n      popup.classList.remove('active');\r\n    }\r\n  })\r\n\r\n  popupOpenBtns.forEach((el) => {\r\n    el.addEventListener('click', (e) => {\r\n      popup.classList.add('active');\r\n      const rulesNum = mapRuls(e.currentTarget.getAttribute('data-ruls'));\r\n      const { textRules } = dataRules[rulesNum];\r\n      popupText.innerHTML = `${textRules}`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction mapRuls(name) {\r\n  const gamesRules = {\r\n    ticTacToe: 0,\r\n    snake: 1\r\n  }\r\n  return gamesRules[name];\r\n}","'use strict'\r\nclass Canvas {\r\n  constructor(canvasEl) {\r\n    this.canvas = document.querySelector(canvasEl);\r\n    this.context = this.canvas.getContext('2d');\r\n  }\r\n}\r\n\r\nclass Board {\r\n  constructor(mainEl, scoreEl, canvas, cell) {\r\n    this.mainEl = document.querySelector(mainEl);\r\n    this.scoreEl = document.querySelector(scoreEl);\r\n\r\n    this.cell = cell;\r\n    this.indentCell = 2;\r\n    this.score = 0;\r\n    this.context = canvas.context;\r\n    this.canvas = canvas.canvas;\r\n\r\n    this.widthCanvas = this.mainEl.clientWidth / 2;\r\n    this.heightCanvas = this.mainEl.clientHeight - 300;\r\n\r\n    this.widthGame = this.roundCell(this.widthCanvas, this.cell);\r\n    this.heightGame = this.roundCell(this.heightCanvas, this.cell);\r\n    this.canvas.setAttribute('width', this.widthGame);\r\n    this.canvas.setAttribute('height', this.heightGame);\r\n\r\n    this.rowGame = this.widthGame / this.cell;\r\n    this.columnGame = this.heightGame / this.cell;\r\n\r\n    this.barrier = {\r\n      levelEasy: [],\r\n      levelHard: [\r\n        { x: 0, y: 0 },\r\n        { x: 0, y: this.cell },\r\n        { x: this.cell, y: 0 },\r\n        { x: this.cell, y: this.cell },\r\n        { x: 0, y: this.heightGame - this.cell },\r\n        { x: 0, y: this.heightGame - this.cell * 2 },\r\n        { x: this.cell, y: this.heightGame - this.cell },\r\n        { x: this.cell, y: this.heightGame - this.cell * 2 },\r\n        { x: this.widthGame - this.cell, y: this.heightGame - this.cell },\r\n        { x: this.widthGame - this.cell, y: this.heightGame - this.cell * 2 },\r\n        { x: this.widthGame - this.cell * 2, y: this.heightGame - this.cell },\r\n        { x: this.widthGame - this.cell * 2, y: this.heightGame - this.cell * 2 },\r\n        { x: this.widthGame - this.cell, y: 0 },\r\n        { x: this.widthGame - this.cell * 2, y: 0 },\r\n        { x: this.widthGame - this.cell, y: this.cell },\r\n        { x: this.widthGame - this.cell * 2, y: this.cell }\r\n      ]\r\n    }\r\n    this.barrierMap = this.barrier.levelEasy;\r\n\r\n    this.drawGameBoard();\r\n  }\r\n\r\n  updateMap(level) {\r\n    this.barrierMap = level;\r\n  }\r\n\r\n  updateCell(num) {\r\n    this.cell = num;\r\n  }\r\n\r\n  roundCell(num, cell) {\r\n    return Math.round(num / cell) * cell;\r\n  }\r\n\r\n  drawGameBoard() {\r\n    for (let y = 0; y < this.columnGame; y++) {\r\n      for (let x = 0; x < this.rowGame; x++) {\r\n        this.context.fillStyle = 'rgba(255, 255, 255, 0.4)';\r\n        this.context.fillRect(x * this.cell, y * this.cell, this.cell - this.indentCell, this.cell - this.indentCell);\r\n      }\r\n    }\r\n\r\n    this.drawScore(this.score);\r\n    this.drawBarrier();\r\n  }\r\n\r\n  drawBarrier() {\r\n    this.barrierMap.forEach((el) => {\r\n      this.context.fillStyle = '#333333';\r\n      this.context.fillRect(el.x, el.y, this.cell - this.indentCell, this.cell - this.indentCell);\r\n    });\r\n  }\r\n\r\n  drawScore() {\r\n    return this.scoreEl.textContent = `Счет: ${this.score}`;\r\n  }\r\n\r\n  zeroScore() {\r\n    this.score = 0;\r\n    return this.scoreEl.textContent = `Счет: 0`;\r\n  }\r\n\r\n  updateScore(num) {\r\n    this.score++;\r\n    this.drawScore();\r\n  }\r\n}\r\n\r\nclass Berry {\r\n  constructor(canvas, board) {\r\n    this.context = canvas.context;\r\n    this.cell = board.cell;\r\n    this.radius = this.cell / 3;\r\n    this.rowGame = board.rowGame;\r\n    this.columnGame = board.columnGame;\r\n    this.pi = Math.PI;\r\n    this.x;\r\n    this.y;\r\n  }\r\n\r\n  draw() {\r\n    this.context.beginPath();\r\n    this.context.fillStyle = \"#9f5e7e\";\r\n    this.context.arc(this.x + (this.cell / 2), this.y + (this.cell / 2), this.radius, 0, this.pi * 2);\r\n    this.context.fill();\r\n    this.context.closePath();\r\n  }\r\n\r\n  coordinats() {\r\n    this.x = getRandomInt(0, this.rowGame) * this.cell;\r\n    this.y = getRandomInt(0, this.columnGame) * this.cell;\r\n  }\r\n\r\n  newPosition(snakeTail, barrierMap) {\r\n    this.coordinats();\r\n\r\n    snakeTail.forEach((elem) => {\r\n      if (elem.x === this.x && elem.y === this.y) {\r\n        this.coordinats();\r\n      }\r\n    });\r\n\r\n    if (barrierMap.length > 0) {\r\n      barrierMap.forEach((elem) => {\r\n        if (elem.x === this.x && elem.y === this.y) {\r\n          this.coordinats();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nclass Snake {\r\n  constructor(canvas, board) {\r\n    this.context = canvas.context;\r\n    this.cell = board.cell;\r\n    this.indentCell = board.indentCell;\r\n    this.heightGame = board.heightGame;\r\n    this.x = 0;\r\n    this.y = this.cell * 3;\r\n    this.dx = this.cell\r\n    this.dy = 0;\r\n    this.tails = [{ x: 0, y: this.cell * 3 }];\r\n    this.maxTails = 3;\r\n    this.keyDirection = null;\r\n\r\n    this.handleControl = (event) => {\r\n      if (event.code === 'ArrowUp') {\r\n        if (this.keyDirection === null || this.keyDirection !== 'down') {\r\n          this.dx = 0;\r\n          this.dy = -this.cell;\r\n          this.keyDirection = 'up';\r\n        }\r\n      }\r\n\r\n      if (event.code === 'ArrowDown') {\r\n        if (this.keyDirection === null || this.keyDirection !== 'up') {\r\n          this.dx = 0;\r\n          this.dy = this.cell;\r\n          this.keyDirection = 'down';\r\n        }\r\n      }\r\n\r\n      if (event.code === 'ArrowLeft') {\r\n        if (this.keyDirection === null || this.keyDirection !== 'right') {\r\n          this.dx = -this.cell;\r\n          this.dy = 0;\r\n          this.keyDirection = 'left';\r\n        }\r\n      }\r\n\r\n      if (event.code === 'ArrowRight') {\r\n        if (this.keyDirection === null || this.keyDirection !== 'left') {\r\n          this.dx = this.cell;\r\n          this.dy = 0;\r\n          this.keyDirection = 'right';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  update(berry, board, animationStart, animationFps, animationSpeed) {\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n\r\n    //Collision Border\r\n    if (this.x < 0) {\r\n      this.x = board.widthGame - this.cell;\r\n    }\r\n\r\n    if (this.x >= board.widthGame) {\r\n      this.x = 0;\r\n    }\r\n\r\n    if (this.y < 0) {\r\n      this.y = board.heightGame - this.cell;\r\n    }\r\n\r\n    if (this.y >= board.heightGame) {\r\n      this.y = 0;\r\n    }\r\n\r\n    this.tails.unshift({ x: this.x, y: this.y });\r\n\r\n    if (this.tails.length > this.maxTails) {\r\n      this.tails.pop();\r\n    }\r\n\r\n    this.crachSnake(berry, board, animationStart, animationFps);\r\n    this.eatSnake(berry, board, animationSpeed);\r\n  }\r\n\r\n  crachSnake(berry, board, animationStart, animationFps) {\r\n    this.tails.forEach((el, index) => {\r\n      for (let i = index + 1; i < this.tails.length; i++) {\r\n        if (el.x === this.tails[i].x && el.y === this.tails[i].y) {\r\n          this.deth();\r\n          board.zeroScore();\r\n          berry.newPosition(this.tails, board.barrierMap)\r\n\r\n          animationStart = 0;\r\n          animationFps = 300;\r\n\r\n          document.removeEventListener('keydown', this.handleControl);\r\n\r\n        }\r\n      }\r\n    });\r\n\r\n    board.barrierMap.forEach((el) => {\r\n      if (el.x === this.tails[0].x && el.y === this.tails[0].y) {\r\n        this.deth();\r\n        board.zeroScore();\r\n        berry.newPosition(this.tails, board.barrierMap);\r\n\r\n        animationStart = 0;\r\n        animationFps = 300;\r\n\r\n        document.removeEventListener('keydown', this.handleControl);\r\n      }\r\n    });\r\n  }\r\n\r\n  eatSnake(berry, board, animationSpeed) {\r\n    this.tails.forEach((el) => {\r\n      if (el.x === berry.x && el.y === berry.y) {\r\n        this.maxTails++;\r\n        board.updateScore();\r\n        berry.newPosition(this.tails, board.barrierMap);\r\n\r\n        animationSpeed = animationSpeed + 0.7;\r\n      }\r\n    });\r\n  }\r\n\r\n  draw() {\r\n    this.tails.forEach((el, index) => {\r\n      if (index == 0) {\r\n        this.context.fillStyle = '#333333';\r\n      } else {\r\n        this.context.fillStyle = '#555555';\r\n      }\r\n\r\n      this.context.fillRect(el.x, el.y, this.cell - this.indentCell, this.cell - this.indentCell);\r\n    });\r\n  }\r\n\r\n  deth() {\r\n    this.x = 0;\r\n    this.y = this.cell * 3;\r\n    this.dx = this.cell;\r\n    this.dy = 0;\r\n    this.tails = [{ x: 0, y: this.cell * 3 }];\r\n    this.maxTails = 3;\r\n    this.keyDirection = null;\r\n  }\r\n}\r\n\r\nclass Game {\r\n  constructor(selectorNewGame, selectorRestart, selectorEasyLevel, selectorHardLevel, cell) {\r\n    this.newGameBtn = document.querySelector(selectorNewGame);\r\n    this.restartBtn = document.querySelector(selectorRestart);\r\n    this.easyLevelBtn = document.querySelector(selectorEasyLevel);\r\n    this.hardLevelBtn = document.querySelector(selectorHardLevel);\r\n    this.fps = 300;\r\n    this.startTime = 0;\r\n    this.currentTime = 0;\r\n    this.time = 0;\r\n    this.currentSecond = 0\r\n    this.speed = 0;\r\n    this.cell = cell;\r\n\r\n    this.canvas = new Canvas('.js-snake__game');\r\n    this.board = new Board('.js-snake', '.js-snake__score-text', this.canvas, this.cell);\r\n    this.berry = new Berry(this.canvas, this.board);\r\n    this.snake = new Snake(this.canvas, this.board);\r\n\r\n    this.gameLoopSnake = this.gameLoopSnake.bind(this);\r\n    this.gameLoopSnake();\r\n\r\n    this.controls();\r\n    this.btns();\r\n\r\n    this.berry.newPosition(this.snake.tails, this.board.barrierMap);\r\n  }\r\n\r\n  btns() {\r\n    this.newGameBtn.addEventListener('click', () => {\r\n      this.easyLevelBtn.removeAttribute('disabled');\r\n      this.hardLevelBtn.removeAttribute('disabled');\r\n      this.newGameBtn.setAttribute('disabled', 'disabled');\r\n      this.restartBtn.setAttribute('disabled', 'disabled');\r\n\r\n      document.addEventListener('keydown', this.snake.handleControl);\r\n    });\r\n\r\n    this.easyLevelBtn.addEventListener('click', () => {\r\n      this.checkLevel(this.board.barrier.levelEasy);\r\n    });\r\n\r\n    this.hardLevelBtn.addEventListener('click', () => {\r\n      this.checkLevel(this.board.barrier.levelHard);\r\n    });\r\n\r\n    this.restartBtn.addEventListener('click', () => {\r\n      //Refresh Game\r\n      this.snake.deth();\r\n      this.board.zeroScore();\r\n      this.berry.newPosition(this.snake.tails, this.board.barrierMap)\r\n\r\n      this.fps = 300;\r\n      this.startTime = 0;\r\n\r\n      document.addEventListener('keydown', this.snake.handleControl);\r\n    });\r\n  }\r\n\r\n  controls() {\r\n    document.addEventListener('keydown', this.snake.handleControl);\r\n  }\r\n\r\n  checkLevel(level) {\r\n    this.board.updateMap(level);\r\n\r\n    this.snake.deth();\r\n    this.board.zeroScore();\r\n    this.berry.newPosition(this.snake.tails, this.board.barrierMap)\r\n\r\n    this.fps = 300;\r\n    this.startTime = 0;\r\n\r\n    this.restartBtn.removeAttribute('disabled');\r\n    this.newGameBtn.removeAttribute('disabled');\r\n    this.easyLevelBtn.setAttribute('disabled', 'disabled');\r\n    this.hardLevelBtn.setAttribute('disabled', 'disabled');\r\n  }\r\n\r\n  gameLoopSnake() {\r\n    requestAnimationFrame(this.gameLoopSnake);\r\n\r\n    if (this.startTime === 0) {\r\n      this.startTime = new Date().getTime();\r\n    }\r\n\r\n    this.currentTime = new Date().getTime();\r\n    this.time = this.currentTime - this.startTime;\r\n    this.currentSecond = Math.floor(this.time / (this.fps - this.speed));\r\n\r\n    if (this.currentSecond > 0) {\r\n      this.startTime = 0;\r\n\r\n      this.canvas.context.clearRect(0, 0, this.board.widthGame, this.board.heightGame);\r\n\r\n      this.board.drawGameBoard();\r\n      this.berry.draw();\r\n      this.snake.draw();\r\n      this.snake.update(this.berry, this.board, this.startTime, this.fps, this.speed);\r\n    }\r\n  }\r\n}\r\n\r\nconst game = document.querySelector('.js-snake');\r\n\r\nif (game !== null) {\r\n  new Game('.js-snake__new-game', '.js-snake__restart', '.js-snake__easy-level', '.js-snake__hard-level', 25);\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}","'use strict'\r\nclass TicTacToe {\r\n  constructor(selectorBoard, selectorText, selectorNewGame, selectorRestart, selectorEasyLevel, selectorHardLevel) {\r\n    this.gameBoard = document.querySelector(selectorBoard);\r\n    this.winText = document.querySelector(selectorText);\r\n\r\n    this.newGameBtn = document.querySelector(selectorNewGame);\r\n    this.restartBtn = document.querySelector(selectorRestart);\r\n    this.easyLevelBtn = document.querySelector(selectorEasyLevel);\r\n    this.hardLevelBtn = document.querySelector(selectorHardLevel);\r\n\r\n    this.origBoard;\r\n    this.cells;\r\n    this.keyLevel = 'easy';\r\n\r\n    this.huPlayer = 'X';\r\n    this.aiPlayer = 'O';\r\n\r\n    this.huSymbol = `<svg class=\"cross\">\r\n    <line class=\"cross-first\" x1=\"10\" y1=\"10\" x2=\"70\" y2=\"70\" stroke=\"#333\" stroke-width=\"10\" stroke-linecap=\"round\" />\r\n    <line class=\"cross-second\" x1=\"70\" y1=\"10\" x2=\"10\" y2=\"70\" stroke=\"#333\" stroke-width=\"10\" stroke-linecap=\"round\" />\r\n    </svg>`;\r\n    this.aiSymbol = `<svg class=\"circle\">\r\n    <circle r=\"30\" cx=\"40\" cy=\"40\" stroke=\"#c15746\" stroke-width=\"10\" fill=\"none\" stroke-linecap=\"round\" />\r\n    </svg>`;\r\n\r\n    this.winCombos = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [6, 4, 2]\r\n    ];\r\n\r\n    this.handleTurnClick = (event) => {\r\n      if (typeof this.origBoard[event.target.id] == 'number') {\r\n        this.turn(event.target.id, this.huPlayer, this.huSymbol);\r\n\r\n        if ((!this.checkTie()) && (!this.checkWin(this.origBoard, this.huPlayer))) {\r\n          this.turn(this.BestSport(), this.aiPlayer, this.aiSymbol);\r\n        }\r\n      }\r\n    };\r\n\r\n    this.init();\r\n  }\r\n\r\n  whoWinner(who) {\r\n    this.winText.innerText = who;\r\n  }\r\n\r\n  init() {\r\n    for (let i = 0; i < 9; i++) {\r\n      const cell = document.createElement('div');\r\n      cell.setAttribute('id', i);\r\n      cell.classList.add('tic-tac-toe__cell');\r\n      this.gameBoard.appendChild(cell);\r\n    }\r\n    this.cells = document.querySelectorAll('.tic-tac-toe__cell');\r\n\r\n    this.newGameBtn.addEventListener('click', () => {\r\n      this.easyLevelBtn.removeAttribute('disabled');\r\n      this.hardLevelBtn.removeAttribute('disabled');\r\n      this.newGameBtn.setAttribute('disabled', 'disabled');\r\n      this.restartBtn.setAttribute('disabled', 'disabled');\r\n    })\r\n\r\n    this.easyLevelBtn.addEventListener('click', () => {\r\n      this.checkLevel('easy');\r\n    })\r\n\r\n    this.hardLevelBtn.addEventListener('click', () => {\r\n      this.checkLevel('hard');\r\n    })\r\n\r\n    this.restartBtn.addEventListener('click', () => {\r\n      this.start();\r\n    })\r\n  }\r\n\r\n  checkLevel(level) {\r\n    this.keyLevel = level;\r\n    this.start();\r\n    this.restartBtn.removeAttribute('disabled');\r\n    this.newGameBtn.removeAttribute('disabled');\r\n    this.easyLevelBtn.setAttribute('disabled', 'disabled');\r\n    this.hardLevelBtn.setAttribute('disabled', 'disabled');\r\n  }\r\n\r\n  start() {\r\n    this.origBoard = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n    for (let i = 0; i < this.cells.length; i++) {\r\n      this.cells[i].innerHTML = '';\r\n      this.cells[i].classList.add('pointer');\r\n      this.cells[i].addEventListener('click', this.handleTurnClick)\r\n\r\n      this.winText.innerText = '';\r\n    }\r\n  }\r\n\r\n  turn(squareId, player, playerSymbol) {\r\n    this.origBoard[squareId] = player;\r\n    document.getElementById(squareId).innerHTML = playerSymbol;\r\n    this.cells[squareId].removeEventListener('click', this.handleTurnClick);\r\n    this.cells[squareId].classList.remove('pointer');\r\n\r\n    let gameWon = this.checkWin(this.origBoard, player);\r\n    if (gameWon) {\r\n      this.gameOver(player);\r\n    }\r\n  }\r\n\r\n  checkWin(board, player) {\r\n    let moves = this.playerMoves(board, player);\r\n\r\n    for (let win of this.winCombos) {\r\n      if (win.every((elem) => moves.indexOf(elem) !== -1)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkTie() {\r\n    if (this.emptySquares().length == 0) {\r\n      for (let i = 0; i < this.cells.length; i++) {\r\n        this.cells[i].removeEventListener('click', this.handleTurnClick);\r\n      }\r\n      setTimeout(() => this.whoWinner('Ничья'), 1200);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  gameOver(player) {\r\n    for (let i = 0; i < this.cells.length; i++) {\r\n      this.cells[i].removeEventListener('click', this.handleTurnClick);\r\n      this.cells[i].classList.remove('pointer');\r\n    }\r\n\r\n    setTimeout(() => this.whoWinner(player === this.huPlayer ? 'Вы победили' : 'Вы проиграли'), 1200);\r\n  }\r\n\r\n\r\n  emptySquares() {\r\n    return this.origBoard.filter((cell) => typeof cell == 'number');\r\n  }\r\n\r\n  playerMoves(board, player) {\r\n    let results = [];\r\n\r\n    for (let i = 0; i < board.length; i++) {\r\n      const e = board[i];\r\n      if (e === player) {\r\n        results = results.concat(i);\r\n      }\r\n    }\r\n    return results;\r\n  }\r\n\r\n  BestSport() {\r\n    if (this.keyLevel === 'easy') {\r\n      return this.BestSportEasy();\r\n    }\r\n    else if (this.keyLevel === 'hard') {\r\n      return this.BestSportHard();\r\n    }\r\n  }\r\n\r\n  BestSportEasy() {\r\n    let arr = this.emptySquares();\r\n    let moves = this.playerMoves(this.origBoard, this.huPlayer);\r\n\r\n    for (let win of this.winCombos) {\r\n      if ((moves.includes(win[0])) && (moves.includes(win[1]))) {\r\n        if (arr.includes(win[2])) {\r\n          return win[2];\r\n        }\r\n      } else if ((moves.includes(win[0])) && (moves.includes(win[2]))) {\r\n        if (arr.includes(win[3])) {\r\n          return win[1];\r\n        }\r\n      } else if ((moves.includes(win[1])) && (moves.includes(win[2]))) {\r\n        if (arr.includes(win[0])) {\r\n          return win[0];\r\n        }\r\n      }\r\n    }\r\n\r\n    let index = Math.floor(Math.random() * arr.length);\r\n    return arr[index];\r\n  }\r\n\r\n  BestSportHard() {\r\n    let arr = this.minimax(this.origBoard, this.aiPlayer);\r\n    return arr.index;\r\n  }\r\n\r\n  minimax(newBoard, player) {\r\n    let emptySpots = this.emptySquares();\r\n\r\n    if (this.checkWin(newBoard, this.huPlayer)) {\r\n      return { score: -10 };\r\n    } else if (this.checkWin(newBoard, this.aiPlayer)) {\r\n      return { score: 10 };\r\n    } else if (emptySpots.length === 0) {\r\n      return { score: 0 };\r\n    }\r\n    let moves = [];\r\n\r\n    for (let i = 0; i < emptySpots.length; i++) {\r\n      let move = {};\r\n\r\n      move.index = newBoard[emptySpots[i]];\r\n      newBoard[emptySpots[i]] = player;\r\n\r\n      if (player == this.aiPlayer) {\r\n        let result = this.minimax(newBoard, this.huPlayer);\r\n        move.score = result.score;\r\n      } else {\r\n        let result = this.minimax(newBoard, this.aiPlayer);\r\n        move.score = result.score;\r\n      }\r\n\r\n      newBoard[emptySpots[i]] = move.index;\r\n      moves.push(move);\r\n    }\r\n\r\n    let bestMove;\r\n\r\n    if (player === this.aiPlayer) {\r\n      let bestScore = -Infinity;\r\n      for (let i = 0; i < moves.length; i++) {\r\n        if (moves[i].score > bestScore) {\r\n          bestScore = moves[i].score;\r\n          bestMove = i;\r\n        }\r\n      }\r\n    } else {\r\n      let bestScore = Infinity;\r\n      for (let i = 0; i < moves.length; i++) {\r\n        if (moves[i].score < bestScore) {\r\n          bestScore = moves[i].score;\r\n          bestMove = i;\r\n        }\r\n      }\r\n    }\r\n    return moves[bestMove];\r\n  }\r\n}\r\n\r\nconst game = document.querySelector('.tic-tac-toe');\r\n\r\nif (game !== null) {\r\n  new TicTacToe('.js-tic-tac-toe__game', '.js-tic-tac-toe__win-text', '.js-tic-tac-toe__new-game', '.js-tic-tac-toe__restart', '.js-tic-tac-toe__easy-level', '.js-tic-tac-toe__hard-level');\r\n}\r\n"]}